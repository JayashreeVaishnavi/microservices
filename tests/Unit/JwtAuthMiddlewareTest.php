<?php

namespace Tests\Unit;

use App\Models\User;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\BasicTestCase;
use Tymon\JWTAuth\Facades\JWTAuth;

class JwtAuthMiddlewareTest extends BasicTestCase
{
    use DatabaseTransactions;
    protected $logoutUrl;

    /**
     * Setup the test environment.
     *
     * @return void
     */
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->logoutUrl = config('app.url') . '/api/v1/logout';
    }

    /**
     * There is no token
     */
    public function testTokenNotProvided()
    {
        $this->post($this->logoutUrl, [], $this->setUpHeaders())
            ->assertStatus(STATUS_CODE_UNAUTHORIZED)
            ->assertJson(getCommonErrorResponse('TOKEN_NOT_PROVIDED', 'Authenticated token is not provided.'));
    }

    /**
     * The token provided is wrong
     */
    public function testTokenInvalid()
    {
        $this->post($this->logoutUrl, [], $this->setUpHeaders($this->token . 'AShggyg'))
            ->assertStatus(STATUS_CODE_UNAUTHORIZED)
            ->assertJson(getCommonErrorResponse('TOKEN_INVALID', 'Authenticated token is invalid.'));
    }

    /**
     * The token user is not found
     */
    public function testUserNotFound()
    {
        $newUser = User::factory()->create();
        $newToken = JWTAuth::fromUser($newUser);
        $newUser->delete();
        $this->post($this->logoutUrl, [], $this->setUpHeaders($newToken))
            ->assertStatus(STATUS_CODE_NOT_FOUND)
            ->assertJson(getCommonErrorResponse('USER_NOT_FOUND', 'User detail is not found.'));
    }
}
